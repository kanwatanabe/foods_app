version: 2
jobs:
  build:
    docker:
        - image: circleci/ruby:2.6.3-node-browsers
          environment:
            - RAILS_ENV: 'test'

        - image: circleci/mysql:5.7
          environment:
            - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
            - MYSQL_ROOT_HOST: '%'

    working_directory: ~/repo

    steps:
        - checkout

        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "Gemfile.lock" }}
              - v1-dependencies-

        # node.jsのアップデート
        - run:
            name: update node v12.14.0
            command: |
              curl -sSL "https://nodejs.org/dist/v12.14.0/node-v12.14.0-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v12.14.0-linux-x64/bin/node
              curl https://www.npmjs.com/install.sh | sudo bash

        # bundle install
        - run:
            name: install dependencies
            command: |
              bundle install --jobs=4 --retry=3 --path vendor/bundle

        - run:
            name: install dependencies
            command: yarn install

        - save_cache:
            paths:
              - ./vendor/bundle
              - ./node_modules
            key: v1-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}

        - run: mv config/database.yml.ci config/database.yml
        - run: bundle exec rake db:create
        - run: bundle exec rake db:schema:load

        # RuboCop
        #- run:
          #name: RuboCop
          #command: bundle exec rubocop

        # RSpec
        - run:
            name: RSpec
            # 最初のパイプ | は、複数行のシェルコマンドがあることを示します。 
            command: |
              mkdir /tmp/test-results
              TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
                circleci tests split --split-by=timings)"
           
              bundle exec rspec \
                --format progress \
                --format RspecJunitFormatter \
                --out /tmp/test-results/rspec.xml \
                --format progress \
                $TEST_FILES

        # テストリザルト
        - store_test_results:
            path: /tmp/test-results
        - store_artifacts:
            path: /tmp/test-results
            destination: test-results